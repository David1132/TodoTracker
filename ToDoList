<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>TodoTracker</title>
  <style>
    body {
      padding: 15px;
      background-color: #66CCFF;
      font-family: sans-serif;
      justify-content: center;
    }
    #title {
      padding: 10px;
      font-size: 36px;
      border: 2px solid #FFF;
      width: 250px;
    }
    #todo-header {
      font-size: 24px;
    }

    ul {
      list-style: none;
      padding-left: 0;
      width: 250px;
    }
    li {
      color: #333;
      background-color: rgba(255,255,255,.5);
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 5px;
      list-style: none;
    }

  </style>
</head>
<body>
  <h1 id="title">Todo Tracker</h1>

  <form>
    <input type="text" id="user-todo" placeholder="New Todo" required>
  </form>

  <h2 id="todo-header">Todos</h2>
  <ul>

  </ul>

  <button id="clear">Clear All</button>

  <script>
    var form = document.querySelector('form');
    var todoList = document.querySelector('ul');
    var button = document.querySelector('button');
    var input = document.getElementById('user-todo');



    // Declare variable `todosArray` to hold our todos by setting to an empty array.
    // In this situation whenever we refresh the page we are emptying out our array.
      // We want to ask if there are already `todos` in localStorage. If so, then we will get those `todos`
      // using JSON.parse. If local storage does not have any `todos` then we will set our `todosArray` to
      // an empty array.
    var todosArray = localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [];
    // var todosArray;
    // if (localStorage.getItem('todos')) {
    //   todosArray = JSON.parse(localStorage.getItem('todos'));
    // } else {
    //   todosArray = [];
    // }

    // var todosArray = [];

     // In this situation whenever we refresh the page we are emptying out our array.
      // We want to ask if there are already `todos` in localStorage. If so, then we will get those items
      // and assign to our `todosArray`. If not, we will set to an empty array.
    // var todosArray = localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [];



    // use localStorage setItem() method to set `todos` to a string with `JSON.stringify()`
      // JSON.stringify() if used because localStorage works with strings. This is how
      // we sent data to localStorage.
    localStorage.setItem('todos', JSON.stringify(todosArray));

    // Declare a variable `storage` that contains all the information in localStorage.
      // We will assign to `storage` JSON.parse() method that converts strings from local
      // storage into data we can access with JavaScript. Make sure to use the
      // `getItem()` method to search `todos`.
      // When receiving data from a web server, the data is always a string.
      //Parse the data with JSON.parse(), and the data becomes a JavaScript object.
      var storage = JSON.parse(localStorage.getItem('todos'));


    form.addEventListener('submit', function (e) {
      e.preventDefault();

      // push onto `todosArray` the `input.value`
      todosArray.push(input.value);

      // on localStorage now use `setItem()` for the key `'todos'` the value
        // of the todosArray as a string with the `JSON.stringify()` method.
        // We will need this information in `localStorage` so we can access after
        // user refreshes page or closes browser.
      localStorage.setItem('todos', JSON.stringify(todosArray));

      todoMaker(input.value);
      input.value = "";
    });

    // var todoMaker = (text) => {
    //   const todo = document.createElement('li');
    //   todo.textContent = text;
    //   todoList.appendChild(todo);
    // }

    var todoMaker = function(text) {
      var todo = document.createElement('li');
      todo.textContent = text;
      todoList.appendChild(todo);
    }

    // Loop through localStorage when a user first opens a page and run the todoMaker function
    for (var i = 0; i < storage.length; i++) {
      todoMaker(storage[i]);
    }

    button.addEventListener('click', function () {
      localStorage.clear();
      todosArray = [];
      while (todoList.firstChild) {
        todoList.removeChild(todoList.firstChild);
      }
    })

  </script>
</body>
</html>
